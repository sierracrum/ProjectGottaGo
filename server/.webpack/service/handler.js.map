{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./handler.js","webpack:///external \"aws-sdk\"","webpack:///external \"uuid\"","webpack:///external \"lodash\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AWS","uuid","_","config","update","region","process","env","R_AWS_REGION","accessKeyId","R_AWS_KEY","secretAccessKey","R_AWS_SECRET","dynamoDb","DynamoDB","auth","event","context","callback","principalId","effect","resource","authResponse","policyDocument","statementOne","Effect","Resource","Statement","generatePolicy","methodArn","getAllStatuses","params","TableName","AttributesToGet","scan","error","result","console","log","items","Items","map","item","push","id","S","doorId","parseInt","N","floorId","buildingId","status","dt","sortBy","reverse","getStatusById","Key","path","JSON","stringify","Item","createStatus","data","body","v1","toString","Date","getTime","putItem","slackStatus","floors","openFloorTxt","findIndex","floor","text","attachments","callback_id","color","attachment_type","slackStatusNotify","require"],"mappings":"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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const AWS = require(\"aws-sdk\");\nconst uuid = require(\"uuid\");\nconst _ = require(\"lodash\");\nconst dbTableName = \"status\";\n// const dynamoDb = require('./db/dynamodb');\nAWS.config.update({\n    region: process.env.R_AWS_REGION,\n    accessKeyId: process.env.R_AWS_KEY,\n    secretAccessKey: process.env.R_AWS_SECRET\n});\nconst dynamoDb = new AWS.DynamoDB();\n\nconst generatePolicy = (principalId, effect, resource) => {\n    let authResponse = {};\n    authResponse.principalId = principalId;\n    if (effect && resource) {\n        const policyDocument = {};\n        policyDocument.Version = '2012-10-17';\n        policyDocument.Statement = [];\n        const statementOne = {};\n        statementOne.Action = 'execute-api:Invoke';\n        statementOne.Effect = effect;\n        statementOne.Resource = resource;\n        policyDocument.Statement[0] = statementOne;\n        authResponse.policyDocument = policyDocument;\n    }\n    return authResponse;\n}\n\nmodule.exports.auth = (event, context, callback) => {\n    // if (!event.authorizationToken) {\n    //     callback('Unauthorized')\n    // }\n\n    // const tokenParts = event.authorizationToken.split(' ');\n    // const tokenValue = tokenParts[1];\n\n    // if (!(tokenParts[0].toLowerCase() === 'Bearer' && tokenValue)) {\n    //     callback('Unauthorized');\n    // }\n\n    // if (tokenValue !== '9OJniHzRsRCApQbWy70gPfAbpHlPa8uc') {\n        callback(null, generatePolicy('demo-user', 'Allow', event.methodArn));\n    //} else {\n        //callback('Unauthorized');\n    //}\n};\n\nmodule.exports.getAllStatuses = (event, context, callback) => {\n    const params = {\n        TableName: dbTableName,\n        AttributesToGet: [\n            'id',\n            'buildingId',\n            'floorId',\n            'doorId',\n            'status',\n            'dt'\n        ]\n    };\n    \n    dynamoDb.scan(params, (error, result) => {\n        if (error) {\n            console.log(error);\n            callback('Failed getting status', error);\n        } else {\n            let items = [];\n            result.Items.map((item) => {\n                items.push({\n                    id: item.id.S,\n                    doorId: parseInt(item.doorId.N),\n                    floorId: parseInt(item.floorId.N),\n                    buildingId: parseInt(item.buildingId.N),\n                    status: parseInt(item.status.N),\n                    dt: item.dt.S\n                });\n            });\n            callback(null, _.sortBy(items, 'dt').reverse());\n        }\n    });\n}\n\nmodule.exports.getStatusById = (event, context, callback) => {\n    const params = {\n        TableName: dbTableName,\n        Key: {\n            id: event.path.id,\n        },\n    };\n    dynamoDb.get(params, (error, result) => {\n        if (error) {\n            console.error(error);\n            callback(\"Failed fetching status\", null);\n        } else {\n            callback(null, JSON.stringify(result.Item));\n        }\n    });\n}\n\nmodule.exports.createStatus = (event, context, callback) => {\n    const data = event.body;\n\n    if (!data) {\n        callback('Status data required', null);\n    }\n\n    if (!data.buildingId) {\n        callback('Building ID required', null);\n    }\n\n    if (!data.floorId) {\n        callback('Floor ID required', null);\n    }\n\n    if (!data.doorId) {\n        callback('Door ID required', null);\n    }\n\n    const params = {\n        TableName: dbTableName,\n        Item: {\n            'id': {S: uuid.v1()},\n            'buildingId': {N: data.buildingId.toString()},\n            'floorId' : {N: data.floorId.toString()},\n            'doorId' : {N: data.doorId.toString()},\n            'status' : {N: data.status.toString()},\n            'dt' : {S: new Date().getTime().toString()}\n        }\n    };\n    const dynamoDb = new AWS.DynamoDB();\n    dynamoDb.putItem(params, function(error, data) {\n        if (error) {\n            console.log(error);\n            callback('Failed storing status', error);\n        } else {\n            callback(null, true);\n        }\n    }); \n}\n\nmodule.exports.slackStatus = (event, context, callback) => {\n    \n    const params = {\n        TableName: dbTableName,\n        AttributesToGet: [\n            'id',\n            'buildingId',\n            'floorId',\n            'doorId',\n            'status',\n            'dt'\n        ]\n    };\n\n    dynamoDb.scan(params, (error, result) => {\n        if (error) {\n            console.log(error);\n            callback('Failed getting status', error);\n        } else {\n\n            let floors = [];\n            let openFloorTxt = '';\n            let items = [];\n\n            // sort\n            result.Items.map((item) => {\n                items.push({\n                    id: item.id.S,\n                    doorId: parseInt(item.doorId.N),\n                    floorId: parseInt(item.floorId.N),\n                    buildingId: parseInt(item.buildingId.N),\n                    status: parseInt(item.status.N),\n                    dt: item.dt.S\n                });\n            });\n            const itemsSorted = _.sortBy(items, 'dt').reverse();\n\n            // get only the last door record\n            itemsSorted.map((item) => {\n                const index = _.findIndex(floors, {floorId: item.floorId});\n                if (index === -1) {\n                    floors.push(item);\n                }\n            });\n\n            // get open doors\n            floors.map((floor) => {\n                openFloorTxt += `Elm F${floor.floorId}\\n`\n            })\n\n            let res = {\n                \"text\": \"Available Bathrooms: \",\n                \"attachments\": [\n                    {\n                        \"text\":openFloorTxt,\n                        \"callback_id\": \"notify\",\n                        \"color\": \"#3AA3E3\",\n                        \"attachment_type\": \"default\"\n                    }\n                ]\n            };\n\n            callback(null, res);\n        }\n    });\n}\n\nmodule.exports.slackStatusNotify = (event, context, callback) => {\n    callback(null, true);\n}","module.exports = require(\"aws-sdk\");","module.exports = require(\"uuid\");","module.exports = require(\"lodash\");"],"sourceRoot":""}