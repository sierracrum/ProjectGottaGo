{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./handler.js","webpack:///external \"aws-sdk\"","webpack:///external \"uuid\"","webpack:///external \"lodash\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AWS","uuid","_","config","update","region","process","env","R_AWS_REGION","accessKeyId","R_AWS_KEY","secretAccessKey","R_AWS_SECRET","dynamoDb","DynamoDB","auth","event","context","callback","principalId","effect","resource","authResponse","policyDocument","statementOne","Effect","Resource","Statement","generatePolicy","methodArn","getAllStatuses","params","TableName","AttributesToGet","scan","error","result","console","log","items","Items","map","item","push","id","S","doorId","parseInt","N","floorId","buildingId","status","dt","sortBy","reverse","getStatusById","dbTableName","Key","path","JSON","stringify","Item","createStatus","data","body","v1","toString","Date","getTime","putItem","slackStatus","floors","openFloorTxt","findIndex","availList","unAvailList","array","length","slice","text","attachments","callback_id","color","attachment_type","actions","style","type","slackStatusNotify","parse","payload","userId","user","action","require"],"mappings":"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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const AWS = require(\"aws-sdk\");\nconst uuid = require(\"uuid\");\nconst _ = require(\"lodash\");\nconst dbTableNameStatus = \"risk-gtg-status\";\nconst dbTableNameUser = \"risk-gtg-user\";\n// const dynamoDb = require('./db/dynamodb');\nAWS.config.update({\n    region: process.env.R_AWS_REGION,\n    accessKeyId: process.env.R_AWS_KEY,\n    secretAccessKey: process.env.R_AWS_SECRET\n});\nconst dynamoDb = new AWS.DynamoDB();\n\nconst generatePolicy = (principalId, effect, resource) => {\n    let authResponse = {};\n    authResponse.principalId = principalId;\n    if (effect && resource) {\n        const policyDocument = {};\n        policyDocument.Version = '2012-10-17';\n        policyDocument.Statement = [];\n        const statementOne = {};\n        statementOne.Action = 'execute-api:Invoke';\n        statementOne.Effect = effect;\n        statementOne.Resource = resource;\n        policyDocument.Statement[0] = statementOne;\n        authResponse.policyDocument = policyDocument;\n    }\n    return authResponse;\n}\n\nmodule.exports.auth = (event, context, callback) => {\n    // if (!event.authorizationToken) {\n    //     callback('Unauthorized')\n    // }\n\n    // const tokenParts = event.authorizationToken.split(' ');\n    // const tokenValue = tokenParts[1];\n\n    // if (!(tokenParts[0].toLowerCase() === 'Bearer' && tokenValue)) {\n    //     callback('Unauthorized');\n    // }\n\n    // if (tokenValue !== '9OJniHzRsRCApQbWy70gPfAbpHlPa8uc') {\n    callback(null, generatePolicy('demo-user', 'Allow', event.methodArn));\n    //} else {\n    //callback('Unauthorized');\n    //}\n};\n\nmodule.exports.getAllStatuses = (event, context, callback) => {\n    const params = {\n        TableName: dbTableNameStatus,\n        AttributesToGet: [\n            'id',\n            'buildingId',\n            'floorId',\n            'doorId',\n            'status',\n            'dt'\n        ]\n    };\n\n    dynamoDb.scan(params, (error, result) => {\n        if (error) {\n            console.log(error);\n            callback('Failed getting status', error);\n        } else {\n            let items = [];\n            result.Items.map((item) => {\n                items.push({\n                    id: item.id.S,\n                    doorId: parseInt(item.doorId.N),\n                    floorId: parseInt(item.floorId.N),\n                    buildingId: parseInt(item.buildingId.N),\n                    status: parseInt(item.status.N),\n                    dt: item.dt.S\n                });\n            });\n            callback(null, _.sortBy(items, 'dt').reverse());\n        }\n    });\n}\n\nmodule.exports.getStatusById = (event, context, callback) => {\n    const params = {\n        TableName: dbTableName,\n        Key: {\n            id: event.path.id,\n        },\n    };\n    dynamoDb.get(params, (error, result) => {\n        if (error) {\n            console.error(error);\n            callback(\"Failed fetching status\", null);\n        } else {\n            callback(null, JSON.stringify(result.Item));\n        }\n    });\n}\n\nmodule.exports.createStatus = (event, context, callback) => {\n    const data = event.body;\n\n    if (!data) {\n        callback('Status data required', null);\n    }\n\n    if (!data.buildingId) {\n        callback('Building ID required', null);\n    }\n\n    if (!data.floorId) {\n        callback('Floor ID required', null);\n    }\n\n    if (!data.doorId) {\n        callback('Door ID required', null);\n    }\n\n    const params = {\n        TableName: dbTableNameStatus,\n        Item: {\n            'id': {\n                S: uuid.v1()\n            },\n            'buildingId': {\n                N: data.buildingId.toString()\n            },\n            'floorId': {\n                N: data.floorId.toString()\n            },\n            'doorId': {\n                N: data.doorId.toString()\n            },\n            'status': {\n                N: data.status.toString()\n            },\n            'dt': {\n                S: new Date().getTime().toString()\n            }\n        }\n    };\n    const dynamoDb = new AWS.DynamoDB();\n    dynamoDb.putItem(params, function (error, data) {\n        if (error) {\n            console.log(error);\n            callback('Failed storing status', error);\n        } else {\n            // get users by active 0\n            const params = {\n                TableName: dbTableNameUser,\n                AttributesToGet: [\n                    'id',\n                    'userId',\n                    'userName',\n                    'dt'\n                ]\n            };\n            dynamoDb.scan(params, (error, result) => {\n                if (error) {\n                    console.log(error);\n                    callback('Failed fetching users', error);\n                } else {\n                    \n                    // send notification\n                    /*result.Items.map((user) => {\n                        const userName = user.userName.S;\n                        const userId = user.userId.S;\n                        const id = user.userId.S;\n                        const action = user.action.S;\n                    });\n\n                    // delete user\n                    var params = {\n                        TableName: dbTableNameUser,\n                        Key: { \"id\": {\n                                \"S\" : result.Items[0].id.S.toString()\n                            }\n                        }\n                    };\n\n                    dynamoDb.deleteItem(params, function(err, data) {\n                        \n                        if (error) {\n                            console.log(error);\n                            callback('Failed fetching users', error);\n                        } else {*/\n\n\n                            // all done\n                            callback(null, true);\n\n\n                        //}\n\n                    //});\n\n                    \n                }\n            });\n        }\n    });\n}\n\nmodule.exports.slackStatus = (event, context, callback) => {\n\n    console.log('body', event.body);\n\n    const params = {\n        TableName: dbTableNameStatus,\n        AttributesToGet: [\n            'id',\n            'buildingId',\n            'floorId',\n            'doorId',\n            'status',\n            'dt'\n        ]\n    };\n\n    dynamoDb.scan(params, (error, result) => {\n        if (error) {\n            console.log(error);\n            callback('Failed getting status', error);\n        } else {\n\n            let floors = [];\n            let openFloorTxt = '';\n            let items = [];\n\n            // sort\n            result.Items.map((item) => {\n                items.push({\n                    id: item.id.S,\n                    doorId: parseInt(item.doorId.N),\n                    floorId: parseInt(item.floorId.N),\n                    buildingId: parseInt(item.buildingId.N),\n                    status: parseInt(item.status.N),\n                    dt: item.dt.S\n                });\n            });\n            const itemsSorted = _.sortBy(items, 'dt').reverse();\n\n            // get only the last door record\n            itemsSorted.map((item) => {\n                const index = _.findIndex(floors, {\n                    doorId: item.doorId,\n                    floorId: item.floorId\n                });\n                if (index === -1) {\n                    floors.push(item);\n                }\n            });\n\n            // get open doors\n            let result = '';\n            let availList = {};\n            let unAvailList = [];\n\n            for (let i = 0; i < array.length; i++) {\n                if (array[i].status === 1) {\n                    if (availList[array[i].floorId]) {\n                        availList[array[i].floorId]++\n                    } else {\n                        availList[array[i].floorId] = 1\n                    }\n                } else {\n                    unAvailList.push(array[i].floorId);\n                }\n            }\n\n            for (var key in availList) {\n                let str = \"F\" + key + \": \" + availList[key] + \" available\\n\"\n                result += str\n            }\n\n            openFloorTxt = result.slice(0, result.length - 1);\n\n            let res = {\n                \"text\": \"Available Bathrooms: \",\n                \"attachments\": [{\n                    \"text\": openFloorTxt,\n                    \"callback_id\": \"notify\",\n                    \"color\": \"#3AA3E3\",\n                    \"attachment_type\": \"default\",\n                    \"actions\": [{\n                            \"name\": \"notify\",\n                            \"text\": \"Notify All\",\n                            \"style\": \"danger\",\n                            \"type\": \"button\",\n                            \"value\": \"all\"\n                        },\n                        {\n                            \"name\": \"notify\",\n                            \"text\": \"Notify F1\",\n                            \"type\": \"button\",\n                            \"value\": \"F1\"\n                        },\n                        {\n                            \"name\": \"notify\",\n                            \"text\": \"Notify F2\",\n                            \"type\": \"button\",\n                            \"value\": \"F2\"\n                        },\n                        {\n                            \"name\": \"notify\",\n                            \"text\": \"Notify F3\",\n                            \"type\": \"button\",\n                            \"value\": \"F3\"\n                        }\n                    ]\n                }]\n            };\n\n            callback(null, res);\n        }\n    });\n\n}\n\nmodule.exports.slackStatusNotify = (event, context, callback) => {\n    const data = JSON.parse(event.body.payload);\n    console.log(data);\n    const params = {\n        TableName: dbTableNameUser,\n        Item: {\n            'id': {\n                S: uuid.v1()\n            },\n            'userId': {\n                N: data.payload.user.id\n            },\n            'user': {\n                S: data.payload.user.user\n            },\n            'action': {\n                S: data.actions[0].value\n            },\n            'dt': {\n                S: new Date().getTime().toString()\n            }\n        }\n    };\n    const dynamoDb = new AWS.DynamoDB();\n    dynamoDb.putItem(params, function (error, data) {\n        if (error) {\n            console.log(error);\n            callback('Failed storing status', error);\n        } else {\n            callback(null, true);\n        }\n    });\n\n}\n\nconst availableGifs = [\n    'https://giphy.com/gifs/excited-screaming-jonah-hill-5GoVLqeAOo6PK',\n    'https://giphy.com/gifs/excited-yes-nicolas-cage-RrVzUOXldFe8M',\n    'https://giphy.com/gifs/JltOMwYmi0VrO',\n    'https://giphy.com/gifs/mrw-wall-thedonald-WUq1cg9K7uzHa',\n    'https://giphy.com/gifs/friends-excited-31lPv5L3aIvTi',\n    'https://giphy.com/gifs/excited-oprah-shouting-y8Mz1yj13s3kI',\n    'https://giphy.com/gifs/excited-fx-charlie-3oKIP9iTS7Ze73m1P2',\n    'https://giphy.com/gifs/seinfeld-preseason-aMh59aKR8vjdC',\n    'https://giphy.com/gifs/carlton-fresh-prince-dance-3o7abldj0b3rxrZUxW',\n    'https://giphy.com/gifs/wwe-wrestling-excited-cbG9wtoO8QScw',\n    'https://giphy.com/gifs/excited-jessica-chastain-finally-yIsbuPCEOgNHO',\n    'https://giphy.com/gifs/yes-applause-shakira-13mbTHVskEHyGA',\n    'https://giphy.com/gifs/finally-its-about-time-took-long-enough-AuwBPJztsEWkw',\n    'https://giphy.com/gifs/yes-agree-totes-sIfvjuG26APYI'\n];\n\nconst oneAvailableGifs = [\n    'https://giphy.com/gifs/run-forrest-gump-l2Sqc3POpzkj5r8SQ',\n    'https://giphy.com/gifs/rockymovie-movie-rocky-sylvester-stallone-1iTH1WIUjM0VATSw',\n    'https://giphy.com/gifs/breakingbad-run-breaking-bad-l0HUjziiiniIsRUY0',\n    'https://giphy.com/gifs/running-muppets-7kn27lnYSAE9O',\n    'https://giphy.com/gifs/tvonetv-scared-run-3oKIPoZniJ2hq8IItG',\n    'https://giphy.com/gifs/filmeditor-christmas-movies-the-polar-express-3otPotP0eZDYu3sPpm',\n    'https://giphy.com/gifs/pizza-bored-april-ludgate-wAClK9HIiBdBu',\n    'https://giphy.com/gifs/kuFDac2MnJN2U',\n    'https://giphy.com/gifs/judge-judy-hurry-up-Emg9qPKR5hquI',\n    'https://giphy.com/gifs/hurry-6QXdPW7qzTVxC',\n    'https://giphy.com/gifs/ufc-mma-ufc-205-l2SpMwIcaPAVg8dnq',\n    'https://giphy.com/gifs/jeff-goldblum-jurassic-park-jurassicparkedit-7XsFGzfP6WmC4',\n    'https://giphy.com/gifs/hells-kitchen-fox-gordon-ramsay-l4pT47HmuSgXIyXbq'\n];\n\nconst noneAvailableGifs = [\n    'https://giphy.com/gifs/angry-the-office-screaming-3t7RAFhu75Wwg',\n    'https://giphy.com/gifs/funny-LX5lCAnX1yais',\n    'https://giphy.com/gifs/angry-frustrated-lizzie-mcguire-ug9SeZBFLKHtK',\n    'https://giphy.com/gifs/snl-l3978hPCi5iREQk5W',\n    'https://giphy.com/gifs/reactiongifs-Rhkq4ehWqVX56',\n    'https://giphy.com/gifs/sad-not-fair-crying-CMRWlA55AYLpS',\n    'https://giphy.com/gifs/made-frank-creator-jSfiX3lj42RDG',\n    'https://giphy.com/gifs/teamcoco-crying-cry-l2JhtKtDWYNKdRpoA',\n    'https://giphy.com/gifs/angry-mad-classic-8pMS5BXOUVZyo',\n    'https://giphy.com/gifs/angry-mad-frustrated-xUOxfeS1G9NTxN02Ag',\n    'https://giphy.com/gifs/KDRv3QggAjyo',\n    'https://giphy.com/gifs/mrw-song-myself-Ty9Sg8oHghPWg',\n    'https://giphy.com/gifs/hells-kitchen-hells-kitchen-gordon-ramsay-l3V0H7bYv5Ml5TOfu',\n    'https://giphy.com/gifs/eye-roll-ryan-reynolds-ugh-54PaD9dWT0go',\n    'https://giphy.com/gifs/friends-why-frustrated-4qmcuu67Hxx0Q',\n    'https://giphy.com/gifs/mrw-reddit-comment-tJeGZumxDB01q',\n    'https://giphy.com/gifs/partner-put-ilkfz8Mn5Yz7O'\n];\n\nconst getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n}","module.exports = require(\"aws-sdk\");","module.exports = require(\"uuid\");","module.exports = require(\"lodash\");"],"sourceRoot":""}