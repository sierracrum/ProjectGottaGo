{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"axios\"","webpack:///./handler.js","webpack:///external \"aws-sdk\"","webpack:///external \"uuid\"","webpack:///external \"lodash\"","webpack:///./libs/notifications.js","webpack:///external \"async\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","AWS","uuid","_","notificationLib","config","update","region","process","env","R_AWS_REGION","accessKeyId","R_AWS_KEY","secretAccessKey","R_AWS_SECRET","dynamoDb","DynamoDB","auth","event","context","callback","principalId","effect","resource","authResponse","policyDocument","statementOne","Effect","Resource","Statement","generatePolicy","methodArn","getAllStatuses","params","TableName","AttributesToGet","scan","error","result","console","log","items","Items","map","item","push","id","S","doorId","parseInt","N","floorId","buildingId","status","dt","sortBy","reverse","getStatusById","dbTableName","Key","path","JSON","stringify","Item","createStatus","data","body","v1","toString","Date","getTime","putItem","putRes","usersResult","messages","getUserMessages","length","sendNotifications","notificationRes","deleteUsers","deleteRes","slackStatus","floors","findIndex","availList","availText","unAvailList","availCount","gifURL","resultTitle","sample","noneAvailableGifs","oneAvailableGifs","availableGifs","attachments","pretext","text","callback_id","color","attachment_type","actions","type","options","image_url","slackStatusNotify","parse","payload","selected_options","userId","user","userName","action","async","axios","users","msg","cb","message","post","SLACK_TOKEN","headers","Content-Type","then","res","channel","dbTableNameUser","deleteItem"],"mappings":"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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"axios\");","const AWS = require(\"aws-sdk\");\nconst uuid = require(\"uuid\");\nconst _ = require(\"lodash\");\nconst axios = require(\"axios\");\nconst dbTableNameStatus = \"risk-gtg-status\";\nconst dbTableNameUser = \"risk-gtg-user\";\nconst notificationLib = require(\"./libs/notifications\");;\n// const dynamoDb = require('./db/dynamodb');\nAWS.config.update({\n    region: process.env.R_AWS_REGION,\n    accessKeyId: process.env.R_AWS_KEY,\n    secretAccessKey: process.env.R_AWS_SECRET\n});\nconst dynamoDb = new AWS.DynamoDB();\n\nconst generatePolicy = (principalId, effect, resource) => {\n    let authResponse = {};\n    authResponse.principalId = principalId;\n    if (effect && resource) {\n        const policyDocument = {};\n        policyDocument.Version = '2012-10-17';\n        policyDocument.Statement = [];\n        const statementOne = {};\n        statementOne.Action = 'execute-api:Invoke';\n        statementOne.Effect = effect;\n        statementOne.Resource = resource;\n        policyDocument.Statement[0] = statementOne;\n        authResponse.policyDocument = policyDocument;\n    }\n    return authResponse;\n}\n\nmodule.exports.auth = (event, context, callback) => {\n    // if (!event.authorizationToken) {\n    //     callback('Unauthorized')\n    // }\n\n    // const tokenParts = event.authorizationToken.split(' ');\n    // const tokenValue = tokenParts[1];\n\n    // if (!(tokenParts[0].toLowerCase() === 'Bearer' && tokenValue)) {\n    //     callback('Unauthorized');\n    // }\n\n    // if (tokenValue !== '9OJniHzRsRCApQbWy70gPfAbpHlPa8uc') {\n    callback(null, generatePolicy('demo-user', 'Allow', event.methodArn));\n    //} else {\n    //callback('Unauthorized');\n    //}\n};\n\nmodule.exports.getAllStatuses = (event, context, callback) => {\n    const params = {\n        TableName: dbTableNameStatus,\n        AttributesToGet: [\n            'id',\n            'buildingId',\n            'floorId',\n            'doorId',\n            'status',\n            'dt'\n        ]\n    };\n\n    dynamoDb.scan(params, (error, result) => {\n        if (error) {\n            console.log(error);\n            callback('Failed getting status', error);\n        } else {\n            let items = [];\n            result.Items.map((item) => {\n                items.push({\n                    id: item.id.S,\n                    doorId: parseInt(item.doorId.N),\n                    floorId: parseInt(item.floorId.N),\n                    buildingId: parseInt(item.buildingId.N),\n                    status: parseInt(item.status.N),\n                    dt: item.dt.S\n                });\n            });\n            callback(null, _.sortBy(items, 'dt').reverse());\n        }\n    });\n}\n\nmodule.exports.getStatusById = (event, context, callback) => {\n    const params = {\n        TableName: dbTableName,\n        Key: {\n            id: event.path.id,\n        },\n    };\n    dynamoDb.get(params, (error, result) => {\n        if (error) {\n            console.error(error);\n            callback(\"Failed fetching status\", null);\n        } else {\n            callback(null, JSON.stringify(result.Item));\n        }\n    });\n}\n\nmodule.exports.createStatus = (event, context, callback) => {\n    const data = event.body;\n\n    if (!data) {\n        callback('Status data required', null);\n    }\n\n    if (!data.buildingId) {\n        callback('Building ID required', null);\n    }\n\n    if (!data.floorId) {\n        callback('Floor ID required', null);\n    }\n\n    if (!data.doorId) {\n        callback('Door ID required', null);\n    }\n\n    const params = {\n        TableName: dbTableNameStatus,\n        Item: {\n            'id': {\n                S: uuid.v1()\n            },\n            'buildingId': {\n                N: data.buildingId.toString()\n            },\n            'floorId': {\n                N: data.floorId.toString()\n            },\n            'doorId': {\n                N: data.doorId.toString()\n            },\n            'status': {\n                N: data.status.toString()\n            },\n            'dt': {\n                S: new Date().getTime().toString()\n            }\n        }\n    };\n    const dynamoDb = new AWS.DynamoDB();\n    dynamoDb.putItem(params, function (error, putRes) {\n        if (error) {\n            console.log(error);\n            callback('Failed storing status', error);\n        } else {\n            // get users by active 0\n            const params = {\n                TableName: dbTableNameUser,\n                AttributesToGet: [\n                    'id',\n                    'userId',\n                    'userName',\n                    'action',\n                    'dt'\n                ]\n            };\n            dynamoDb.scan(params, (error, usersResult) => {\n                if (error) {\n                    console.log(error);\n                    callback('Failed fetching users', error);\n                } else {\n\n                    // build messages\n                    const messages = notificationLib.getUserMessages(usersResult.Items, data.floorId);\n                    if (messages.length) {\n                        notificationLib.sendNotifications(messages, data.floorId, (error, notificationRes) => {\n\n                            if (error) {\n                                console.log(error);\n                                callback('Failed sending messages', error);\n                            } else {\n\n                                notificationLib.deleteUsers(messages, dynamoDb, dbTableNameUser, (error, deleteRes) => {\n\n                                    if (error) {\n                                        console.log(error);\n                                        callback('Failed deleting users', error);\n                                    } else {\n\n                                        callback(null, true);\n\n                                    }\n\n                                });\n\n                            }\n\n                        });\n                    } else {\n                        callback(null, true);\n                    }\n\n                }\n            });\n        }\n    });\n}\n\nmodule.exports.slackStatus = (event, context, callback) => {\n\n    console.log('body', event.body);\n\n    const params = {\n        TableName: dbTableNameStatus,\n        AttributesToGet: [\n            'id',\n            'buildingId',\n            'floorId',\n            'doorId',\n            'status',\n            'dt'\n        ]\n    };\n\n    dynamoDb.scan(params, (error, result) => {\n        if (error) {\n            console.log(error);\n            callback('Failed getting status', error);\n        } else {\n\n            let floors = [];\n            let openFloorTxt = '';\n            let items = [];\n\n\n            // sort\n            result.Items.map((item) => {\n                items.push({\n                    id: item.id.S,\n                    doorId: parseInt(item.doorId.N),\n                    floorId: parseInt(item.floorId.N),\n                    buildingId: parseInt(item.buildingId.N),\n                    status: parseInt(item.status.N),\n                    dt: item.dt.S\n                });\n            });\n            const itemsSorted = _.sortBy(items, 'dt').reverse();\n\n            // // get only the last door record\n            itemsSorted.map((item) => {\n                const index = _.findIndex(floors, {\n                    doorId: item.doorId,\n                    floorId: item.floorId\n                });\n                if (index === -1) {\n                    floors.push(item);\n                }\n            });\n\n\n            // // get open doors\n            let availList = {};\n            let availText = '';\n            let unAvailList = [];\n            let availCount = 0;\n\n            for (let i = 0; i < floors.length; i++) {\n                if (floors[i].status === 1) {\n                    availCount += 1;\n                    if (availList[floors[i].floorId]) {\n                        availList[floors[i].floorId]++;\n                    } else {\n                        availList[floors[i].floorId] = 1;\n                    }\n                } else {\n                    unAvailList.push(floors[i].floorId);\n                }\n            }\n\n            for (var key in availList) {\n                let str = \"Floor \" + key + \": \" + availList[key] + \" available\\n\"\n                availText += str\n            }\n            availText += \"\\n\"\n\n            let gifURL = '';\n            let resultTitle = '';\n            switch (availCount) {\n                case 0:\n                    resultTitle = \"Gotta wait, no bathrooms are available!\"\n                    gifURL = _.sample(noneAvailableGifs)\n                    break;\n                case 1:\n                    resultTitle = \"Gotta hurry, one bathrooms is available!\"\n                    gifURL = _.sample(oneAvailableGifs)\n                    break;\n                default:\n                    resultTitle = \"Gotta choose, there are multiple bathrooms available!\"\n                    gifURL = _.sample(availableGifs)\n            }\n\n            let res = {\n\n                \"attachments\": [{\n                    \"pretext\": resultTitle,\n                    \"text\": availText,\n                    \"callback_id\": \"notify\",\n                    \"color\": \"good\",\n                    \"attachment_type\": \"default\",\n                    \"actions\": [\n                        {\n                            \"name\": \"notify\",\n                            \"text\": \"Notify options...\",\n                            \"type\": \"select\",\n                            \"options\": [\n                                {\n                                    \"text\": \"Any\",\n                                    \"value\": \"any\"\n                                },\n                                {\n                                    \"text\": \"1st Floor\",\n                                    \"value\": \"1\"\n                                },\n                                {\n                                    \"text\": \"2nd Floor\",\n                                    \"value\": \"2\"\n                                },\n                                {\n                                    \"text\": \"3rd Floor\",\n                                    \"value\": \"3\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    \"text\": \"GottaGo\",\n                    \"image_url\": gifURL,\n                }\n                ]\n\n            }\n\n            callback(null, res);\n        }\n    });\n\n}\n\nmodule.exports.slackStatusNotify = (event, context, callback) => {\n    const data = JSON.parse(event.body.payload);\n    console.log(data);\n    console.log(data.actions[0].selected_options[0]);\n    const params = {\n        TableName: dbTableNameUser,\n        Item: {\n            'id': {\n                S: uuid.v1()\n            },\n            'userId': {\n                S: data.user.id\n            },\n            'userName': {\n                S: data.user.name\n            },\n            'action': {\n                S: data.actions[0].selected_options[0].value\n            },\n            'dt': {\n                S: new Date().getTime().toString()\n            }\n        }\n    };\n    const dynamoDb = new AWS.DynamoDB();\n    dynamoDb.putItem(params, function (error, data) {\n        if (error) {\n            console.log(error);\n            callback('Failed storing status', error);\n        } else {\n            callback(null, \"I will notify you when a bathroom opens up\");\n        }\n    });\n\n}\n\nconst availableGifs = [\n    'https://media.giphy.com/media/5GoVLqeAOo6PK/giphy.gif',\n    'https://media.giphy.com/media/RrVzUOXldFe8M/giphy.gif',\n    'https://media.giphy.com/media/JltOMwYmi0VrO/giphy.gif',\n    'https://media.giphy.com/media/WUq1cg9K7uzHa/giphy.gif',\n    'https://media.giphy.com/media/31lPv5L3aIvTi/giphy.gif',\n    'https://media.giphy.com/media/y8Mz1yj13s3kI/giphy.gif',\n    'https://media.giphy.com/media/3oKIP9iTS7Ze73m1P2/giphy.gif',\n    'https://media.giphy.com/media/aMh59aKR8vjdC/giphy.gif',\n    'https://media.giphy.com/media/3o7abldj0b3rxrZUxW/giphy.gif',\n    'https://media.giphy.com/media/cbG9wtoO8QScw/giphy.gif',\n    'https://media.giphy.com/media/yIsbuPCEOgNHO/giphy.gif',\n    'https://media.giphy.com/media/13mbTHVskEHyGA/giphy.gif',\n    'https://media.giphy.com/media/AuwBPJztsEWkw/giphy.gif',\n    'https://media.giphy.com/media/sIfvjuG26APYI/giphy.gif'\n];\n\nconst oneAvailableGifs = [\n    'https://media.giphy.com/media/l2Sqc3POpzkj5r8SQ/giphy.gif',\n    'https://media.giphy.com/media/1iTH1WIUjM0VATSw/giphy.gif',\n    'https://media.giphy.com/media/l0HUjziiiniIsRUY0/giphy.gif',\n    'https://media.giphy.com/media/7kn27lnYSAE9O/giphy.gif',\n    'https://media.giphy.com/media/3oKIPoZniJ2hq8IItG/giphy.gif',\n    'https://media.giphy.com/media/wAClK9HIiBdBu/giphy.gif',\n    'https://media.giphy.com/media/kuFDac2MnJN2U/giphy.gif',\n    'https://media.giphy.com/media/Emg9qPKR5hquI/giphy.gif',\n    'https://media.giphy.com/media/6QXdPW7qzTVxC/giphy.gif',\n    'https://media.giphy.com/media/l2SpMwIcaPAVg8dnq/giphy.gif',\n    'https://media.giphy.com/media/7XsFGzfP6WmC4/giphy.gif',\n    'https://media.giphy.com/media/l4pT47HmuSgXIyXbq/giphy.gif'\n];\n\nconst noneAvailableGifs = [\n    'https://media.giphy.com/media/3t7RAFhu75Wwg/giphy.gif',\n    'https://media.giphy.com/media/LX5lCAnX1yais/giphy.gif',\n    'https://media.giphy.com/media/ug9SeZBFLKHtK/giphy.gif',\n    'https://media.giphy.com/media/l3978hPCi5iREQk5W/giphy.gif',\n    'https://media.giphy.com/media/Rhkq4ehWqVX56/giphy.gif',\n    'https://media.giphy.com/media/CMRWlA55AYLpS/giphy.gif',\n    'https://media.giphy.com/media/jSfiX3lj42RDG/giphy.gif',\n    'https://media.giphy.com/media/l2JhtKtDWYNKdRpoA/giphy.gif',\n    'https://media.giphy.com/media/8pMS5BXOUVZyo/giphy.gif',\n    'https://media.giphy.com/media/xUOxfeS1G9NTxN02Ag/giphy.gif',\n    'https://media.giphy.com/media/KDRv3QggAjyo/giphy.gif',\n    'https://media.giphy.com/media/Ty9Sg8oHghPWg/giphy.gif',\n    'https://media.giphy.com/media/l3V0H7bYv5Ml5TOfu/giphy.gif',\n    'https://media.giphy.com/media/54PaD9dWT0go/giphy.gif',\n    'https://media.giphy.com/media/4qmcuu67Hxx0Q/giphy.gif',\n    'https://media.giphy.com/media/tJeGZumxDB01q/giphy.gif',\n    'https://media.giphy.com/media/tJeGZumxDB01q/giphy.gif'\n];\n\nconst getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n}","module.exports = require(\"aws-sdk\");","module.exports = require(\"uuid\");","module.exports = require(\"lodash\");","\nconst async = require(\"async\");\nconst axios = require(\"axios\");\n\nconst getUserMessages = (users, floorId) => {\n    let messages = [];\n    console.log(floorId);\n    users.map((user) => {\n    \n        const userId = user.userId.S;\n        const id = user.id.S;\n        const action = user.action.S;\n\n        // check user action\n        if (action === 'any' || floorId === action) {\n            messages.push({\n                id: id,\n                userId: userId,\n                msg: `A bathroom on floor ${floorId} is open!`\n            })\n        }\n    });\n    return messages;\n};  \n\nconst sendNotifications = (messages, floorId, cb) => {\n    async.map(messages, (message, callback) => {\n\n        axios.post(`https://slack.com/api/im.open?token=${process.env.SLACK_TOKEN}&user=${message.userId}`, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((res) => {\n            // console.log('open res', res);\n            axios.post(`https://slack.com/api/chat.postMessage?token=${process.env.SLACK_TOKEN}&channel=${res.data.channel.id}&text=${message.msg}`)\n            .then((res) => {\n                // console.log('msg res', res)\n                callback(null, message);\n            });\n        });\n\n    }, (error, res) => {\n\n        if (error) {\n            cb(error, null);\n        } else {\n            cb(null, res);\n        }\n\n    });\n};\n\nconst deleteUsers = (messages, dynamoDb, dbTableNameUser, cb) => {\n    async.map(messages, (message, callback) => {\n\n        var params = {\n            TableName: dbTableNameUser,\n            Key: { \"id\": { \"S\" : message.id } }\n        };\n\n        dynamoDb.deleteItem(params, (error, data) => {\n\n            if (error) {\n                callback(error, null);\n            } else {\n                callback(null, data);\n            }\n\n        });\n\n    }, (error, res) => {\n        if (error) {\n            cb(error, null);\n        } else {\n            cb(null, res);\n        }\n    });  \n};\n\nmodule.exports = {\n    getUserMessages,\n    sendNotifications,\n    deleteUsers\n};","module.exports = require(\"async\");"],"sourceRoot":""}